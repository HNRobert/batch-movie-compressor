services:
  batch-movie-compressor:
    image: ghcr.io/hnrobert/batch-movie-compressor:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: batch-movie-compressor

    # GPU support - uncomment for NVIDIA GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

    # Resource limits - adjust based on your hardware
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 8G

    # Environment variables
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_DIR=${INPUT_DIR:-./data/in}
      - OUTPUT_DIR=${OUTPUT_DIR:-./data/out}
      - FFMPEG_LOG_LEVEL=${FFMPEG_LOG_LEVEL:-info}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_PATH=${LOG_PATH:-/data/out/compression.log}
      - TARGET_SIZE=${TARGET_SIZE:-12.0}
      - RECURSIVE=${RECURSIVE:-true}
      - ENABLE_GPU=${ENABLE_GPU:-true}
      - DRY_RUN=${DRY_RUN:-false}
      - VAAPI_DEVICE=${VAAPI_DEVICE:-/dev/dri/renderD128}
      - PREFERRED_ENCODER=${PREFERRED_ENCODER:-}
      - OUTPUT_FORMAT=${OUTPUT_FORMAT:-}
      - AUDIO_BITRATE_KBPS=${AUDIO_BITRATE_KBPS:-640}
      - EAC3_BITRATE_KBPS=${EAC3_BITRATE_KBPS:-640}
      - AAC_BITRATE_KBPS=${AAC_BITRATE_KBPS:-192}
      - MIN_VIDEO_BITRATE_KBPS=${MIN_VIDEO_BITRATE_KBPS:-1000}
      - SAFETY_RESERVE_MB=${SAFETY_RESERVE_MB:-100}
      - PROGRESS_LOG_INTERVAL_START_SEC=${PROGRESS_LOG_INTERVAL_START_SEC:-2}
      - PROGRESS_LOG_INTERVAL_SEC=${PROGRESS_LOG_INTERVAL_SEC:-60}

    # Volume mounts - separate input and output directories
    volumes:
      # Mount your input movie directory to /data/in
      - '${INPUT_DIR:-./data/in}:/data/in'
      # Mount your output directory to /data/out
      - '${OUTPUT_DIR:-./data/out}:/data/out'
      # Mount GPU devices for Intel GPU acceleration
      - '/dev/dri:/dev/dri'

    # Device access for GPU acceleration
    devices:
      # Intel GPU support
      - '/dev/dri:/dev/dri'

    # Privileged mode may be required for GPU access
    # privileged: true

    # Working directory
    working_dir: /app

    # Default command - script now reads all settings from env variables
    command: ['python', 'main.py']

    # Restart policy
    restart: unless-stopped

    # Health check
    healthcheck:
      test: ['CMD', 'python3', '-c', 'import sys; sys.exit(0)']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    # Logging
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '3'
# Example environment variables - create .env file
# INPUT_DIR=/path/to/your/original/movies
# OUTPUT_DIR=/path/to/compressed/movies
# TARGET_SIZE=12.0
# RECURSIVE=true
# ENABLE_GPU=true
# DRY_RUN=false
# FFMPEG_LOG_LEVEL=info
# LOG_LEVEL=info
# LOG_PATH=/data/out/compression.log
# VAAPI_DEVICE=/dev/dri/renderD128
# PREFERRED_ENCODER=av1_nvenc
# OUTPUT_FORMAT=mkv
# AUDIO_BITRATE_KBPS=640
# EAC3_BITRATE_KBPS=640
# AAC_BITRATE_KBPS=192
# MIN_VIDEO_BITRATE_KBPS=1000
# SAFETY_RESERVE_MB=100
# PROGRESS_LOG_INTERVAL_START_SEC=2
# PROGRESS_LOG_INTERVAL_SEC=60

# GPU Usage:
# For NVIDIA GPU: docker-compose -f docker-compose.yml -f docker-compose.gpu.yml up
# For Intel GPU: docker-compose up (uses default VAAPI support)
# For CPU only: Set ENABLE_GPU=false in .env file
